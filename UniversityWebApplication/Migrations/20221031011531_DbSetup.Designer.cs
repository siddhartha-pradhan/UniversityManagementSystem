// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityWebApplication.Data;

#nullable disable

namespace UniversityWebApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221031011531_DbSetup")]
    partial class DbSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UniversityWebApplication.Models.Club", b =>
                {
                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Entitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Serial");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            Serial = "C",
                            Entitle = "Cityzen"
                        },
                        new
                        {
                            Serial = "G",
                            Entitle = "Germanium"
                        },
                        new
                        {
                            Serial = "D",
                            Entitle = "Devil Art"
                        },
                        new
                        {
                            Serial = "H",
                            Entitle = "Huskar"
                        },
                        new
                        {
                            Serial = "M",
                            Entitle = "Mylioanic"
                        });
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("FacultyID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FacultyID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Credits = 15,
                            FacultyID = 1,
                            Title = "Programming"
                        },
                        new
                        {
                            ID = 2,
                            Credits = 20,
                            FacultyID = 1,
                            Title = "Emerging Platforms and Technologies"
                        },
                        new
                        {
                            ID = 3,
                            Credits = 25,
                            FacultyID = 1,
                            Title = "Advanced Databases"
                        },
                        new
                        {
                            ID = 4,
                            Credits = 30,
                            FacultyID = 1,
                            Title = "Introduction to Artificial Intelligence"
                        },
                        new
                        {
                            ID = 5,
                            Credits = 15,
                            FacultyID = 1,
                            Title = "Application Development"
                        },
                        new
                        {
                            ID = 6,
                            Credits = 30,
                            FacultyID = 2,
                            Title = "Networking and Advanced Security"
                        },
                        new
                        {
                            ID = 7,
                            Credits = 45,
                            FacultyID = 2,
                            Title = "Linux: Commands and Tools"
                        },
                        new
                        {
                            ID = 8,
                            Credits = 45,
                            FacultyID = 3,
                            Title = "Introduction to UI/UX"
                        });
                });

            modelBuilder.Entity("UniversityWebApplication.Models.CourseAssignment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "InstructorID");

                    b.HasIndex("InstructorID");

                    b.ToTable("CourseAssignments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 1
                        },
                        new
                        {
                            CourseID = 1,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 2
                        },
                        new
                        {
                            CourseID = 1,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 2,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 8,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            InstructorID = 3
                        },
                        new
                        {
                            CourseID = 1,
                            InstructorID = 4
                        },
                        new
                        {
                            CourseID = 3,
                            InstructorID = 5
                        },
                        new
                        {
                            CourseID = 4,
                            InstructorID = 5
                        });
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Enrollment", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int?>("Marks")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "StudentID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            StudentID = 1,
                            ID = 1001,
                            Marks = 90
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 1,
                            ID = 1002,
                            Marks = 56
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 2,
                            ID = 1003,
                            Marks = 78
                        },
                        new
                        {
                            CourseID = 3,
                            StudentID = 2,
                            ID = 1004,
                            Marks = 45
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 2,
                            ID = 1005,
                            Marks = 32
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 3,
                            ID = 1006,
                            Marks = 88
                        },
                        new
                        {
                            CourseID = 4,
                            StudentID = 3,
                            ID = 1007
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 4,
                            ID = 1008
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 4,
                            ID = 1009,
                            Marks = 70
                        },
                        new
                        {
                            CourseID = 5,
                            StudentID = 4,
                            ID = 1010,
                            Marks = 75
                        },
                        new
                        {
                            CourseID = 8,
                            StudentID = 4,
                            ID = 1011,
                            Marks = 90
                        },
                        new
                        {
                            CourseID = 6,
                            StudentID = 5,
                            ID = 1012,
                            Marks = 67
                        },
                        new
                        {
                            CourseID = 8,
                            StudentID = 5,
                            ID = 1013
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 6,
                            ID = 1014
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 7,
                            ID = 1015,
                            Marks = 54
                        },
                        new
                        {
                            CourseID = 6,
                            StudentID = 7,
                            ID = 1016,
                            Marks = 55
                        },
                        new
                        {
                            CourseID = 7,
                            StudentID = 8,
                            ID = 1017
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 8,
                            ID = 1018,
                            Marks = 78
                        });
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SupervisorID");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Computing",
                            SupervisorID = 4
                        },
                        new
                        {
                            ID = 2,
                            Name = "Multimedia",
                            SupervisorID = 2
                        },
                        new
                        {
                            ID = 3,
                            Name = "Networking"
                        });
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Joe Root"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Eoin Morgan"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Jos Buttler"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Jonny Bairstow"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Ben Stokes"
                        });
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ClubID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("ClubID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClubID = "C",
                            EnrollmentDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Traxex Diablo"
                        },
                        new
                        {
                            ID = 2,
                            ClubID = "M",
                            EnrollmentDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Johan Sundestein"
                        },
                        new
                        {
                            ID = 3,
                            ClubID = "D",
                            EnrollmentDate = new DateTime(2020, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anathan Stone"
                        },
                        new
                        {
                            ID = 4,
                            ClubID = "H",
                            EnrollmentDate = new DateTime(2021, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tommy Vercitty"
                        },
                        new
                        {
                            ID = 5,
                            ClubID = "D",
                            EnrollmentDate = new DateTime(2022, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anthony Martial"
                        },
                        new
                        {
                            ID = 6,
                            ClubID = "H",
                            EnrollmentDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Marcus Rashford"
                        },
                        new
                        {
                            ID = 7,
                            ClubID = "G",
                            EnrollmentDate = new DateTime(2022, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Diaz Antony"
                        },
                        new
                        {
                            ID = 8,
                            ClubID = "M",
                            EnrollmentDate = new DateTime(2021, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prophet Heir"
                        });
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Course", b =>
                {
                    b.HasOne("UniversityWebApplication.Models.Faculty", "Faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.CourseAssignment", b =>
                {
                    b.HasOne("UniversityWebApplication.Models.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityWebApplication.Models.Instructor", "Instructor")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Enrollment", b =>
                {
                    b.HasOne("UniversityWebApplication.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityWebApplication.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Faculty", b =>
                {
                    b.HasOne("UniversityWebApplication.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("SupervisorID");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Student", b =>
                {
                    b.HasOne("UniversityWebApplication.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Faculty", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Instructor", b =>
                {
                    b.Navigation("CourseAssignments");
                });

            modelBuilder.Entity("UniversityWebApplication.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
